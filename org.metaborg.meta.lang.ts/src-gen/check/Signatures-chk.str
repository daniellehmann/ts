module src-gen/check/Signatures-chk

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  src-gen/signatures/Signatures-sig


imports
  src-gen/signatures/common/Identifiers-sig


imports
  src-gen/check/common/Identifiers-chk


strategies
  check-example =
    check-ModuleSection

  check-example =
    check-SignatureRule

  check-example =
    check-SignatureType

  check-ModuleSection :
    Signatures(t1__) -> <id>
    with <map(check-SignatureRule <+ error-SignatureRule)> t1__

  is-ModuleSection-with-constructor =
    ?Signatures(_)

  check-SignatureRule :
    SignatureRule(t1__, t2__) -> <id>
    with <(check-Id <+ error-Id)> t1__
    with <(check-SignatureType <+ error-SignatureType)> t2__

  is-SignatureRule-with-constructor =
    ?SignatureRule(_, _)

  check-SignatureType :
    SigType(t1__, t2__) -> <id>
    with <map(check-Id <+ error-Id)> t1__
    with <(check-Id <+ error-Id)> t2__

  is-SignatureType-with-constructor =
    ?SigType(_, _)

  check-SignatureType :
    SigInj(t1__) -> <id>
    with <(check-Id <+ error-Id)> t1__

  is-SignatureType-with-constructor =
    ?SigInj(_)

  is-ModuleSection-with-constructor =
    fail

  is-SignatureRule-with-constructor =
    fail

  is-SignatureType-with-constructor =
    fail

  check-ModuleSection :
    amb([h|hs]) -> <check-ModuleSection> h

  check-SignatureRule :
    amb([h|hs]) -> <check-SignatureRule> h

  check-SignatureType :
    amb([h|hs]) -> <check-SignatureType> h

  error-ModuleSection =
    debug(!"Unexpected constructor. Expected constructor from sort ModuleSection instead. ")

  error-SignatureRule =
    debug(!"Unexpected constructor. Expected constructor from sort SignatureRule instead. ")

  error-SignatureType =
    debug(!"Unexpected constructor. Expected constructor from sort SignatureType instead. ")